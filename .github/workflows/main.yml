name: Main Foodgram workflow

on: push

jobs:
#  backend_tests:
#    name: Test backend with flake8 and django tests
#    runs-on: ubuntu-latest
#    services:
#      postgres:
#        image: postgres:14.0
#        env:
#          POSTGRES_USER: django_user
#          POSTGRES_PASSWORD: django_password
#          POSTGRES_DB: django_db
#        ports:
#          - 5432:5432
#        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
#    steps:
#      - name: Check out code
#        uses: actions/checkout@v3
#
#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: 3.12
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip setuptools
#          pip install flake8 flake8-isort
#          pip install -r ./backend/requirements.txt
#
#      - name: Test with flake8 and django tests
#        env:
#          POSTGRES_USER: django_user
#          POSTGRES_PASSWORD: django_password
#          POSTGRES_DB: django_db
#          DB_HOST: 127.0.0.1
#          DB_PORT: 5432
#        run: |
#          python -m flake8 backend/
#          cd backend/
#          python manage.py test

  build_backend_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
#    needs: backend_tests
    steps:
      - name: Check out the repo                 
        uses: actions/checkout@v3

      - name: Set up Docker Buildx             
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker      
        uses: docker/login-action@v2                                     
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to DockerHub                       
        uses: docker/build-push-action@v4
        with:                     
          context: ./backend/           
          push: true                                             
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

#  frontend_tests:
#    name: Test frontend
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up nodeJS
#        uses: actions/setup-node@v3
#        with:
#          node-version: 21.7.1
#
#      - name: Install dependencies
#        run: |
#          cd frontend/
#          npm ci
#
#      - name: Test frontend
#        run: |
#          cd frontend/
#          npm run test

  build_frontend_and_push_to_docker_hub:
    name: Push frontend Docker image to DockerHub
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
#    needs: frontend_tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest

  build_gateway_and_push_to_docker_hub:
    name: Push gateway Docker image to DockerHub
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./nginx/
          push: true                                               
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_gateway:latest

  deploy:
    name: Deploy updated project on production server
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    needs:                               
      - build_backend_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
      - build_gateway_and_push_to_docker_hub
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Copy docker-compose.yml via ssh
        uses: appleboy/scp-action@master
    
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docker-compose.yml"
          target: "foodgram"

      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd foodgram                           
            sudo docker compose -f docker-compose.yml pull 
            sudo docker compose -f docker-compose.yml down
            sudo docker compose -f docker-compose.yml up -d 
            sudo docker compose -f docker-compose.yml exec backend python manage.py migrate
            sudo docker compose -f docker-compose.yml exec backend python manage.py collectstatic
            sudo docker compose -f docker-compose.yml exec backend cp -r /app/collected_static/. /backend_static/static/
            sudo docker compose -f docker-compose.yml exec backend python manage.py json2db

  send_message:
    name: Send a message in Telegram
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: Деплой проекта FoodGram успешно выполнен! (Сообщение от ${{ github.actor }} - ${{ github.event.commits[0].message }})